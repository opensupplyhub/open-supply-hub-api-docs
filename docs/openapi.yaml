openapi: 3.1.0
info:
  title: OS Hub API Design - V1
  summary: This is Target API Design for OS Hub, at this point in time it is a proposal and not a final design.
  description: This specification outlines proposed API design for OS Hub to facilitate discussions and gather feedback before development begins.
  version: 1.0.0
servers:
  - url: http://localhost:8095
    description: Local development server
tags:
  - name: countries
    description: Operations related to countries
  - name: facilities
    description: Operations related to facilities
  - name: sectors
    description: Operations related to sectors
  - name: product-types
    description: Operations related to product types
  - name: facility-types
    description: Operations related to facility types
paths:
  /v1/contributors:
    get:
      summary: Get list of contributors to the OS Hub platform.
      description: >
        Returns an array of contributors with name and id, where id is the unique identifier of the contributor.
      tags:
        - contributors
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/contributor"
    post:
      summary: Create a new contributor.
      description: >
        Creates a new contributor with the given details.
      tags:
        - contributors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/contributor"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contributor"
  /v1/contributors/{user_id}:
    parameters:
      - name: user_id
        in: path
        description: The unique identifier of the contributor.
        required: true
        schema:
          type: string
    get:
      summary: Get details of a contributor by its unique identifier.
      description: >
        Returns details of a contributor with name and id and other properties, where id is the unique identifier of the contributor.
      tags:
        - contributors
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contributor"
    put:
      summary: Update an existing contributor.
      description: >
        Updates an existing contributor with the given details.
      tags:
        - contributors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/contributor"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contributor"
    patch:
      summary: Partially update an existing contributor.
      description: >
        Partially updates an existing contributor with the given details.
      tags:
        - contributors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/contributor"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contributor"
    delete:
      summary: Delete an existing contributor.
      description: >
        Deletes an existing contributor with the given id.
      tags:
        - contributors
      responses:
        204:
          description: No Content
  /v1/countries:
    get:
      summary: Get list of countries supported by the OS Hub platform.
      description: >
        Returns an array of countries with name and id, where id is the ISO 3166-1 alpha-2 code of the country.
      tags:
        - countries
      parameters:
        - $ref: "#/components/parameters/limit"
        - name: start_after
          in: query
          description: Cursor for the pagination, needs to be value from the field used in `sort_by` param.
          required: false
          schema:
            type: string
            minLength: 2
            maxLength: 2
        - name: name
          in: query
          description: Filter using the name of the country.
          required: false
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: alpha_2
          in: query
          description: Filter using the ISO 3166-1 alpha-2 code of the country.
          required: false
          schema:
            type: string
            minLength: 2
            maxLength: 2
        - name: alpha_3
          in: query
          description: Filter using the ISO 3166-1 alpha-3 code of the country.
          required: false
          schema:
            type: string
            minLength: 3
            maxLength: 3
        - name: numeric
          in: query
          description: Filter using the ISO 3166-1 numeric code of the country.
          required: false
          schema:
            type: string
            minLength: 3
            maxLength: 3
        - name: sort_by
          in: query
          description: The field to sort the results by.
          required: false
          default: alpha_2
          schema:
            type: string
            enum: [name, alpha_2, alpha_3, numeric]
        - name: order_by
          in: query
          description: The order to sort the results by.
          required: false
          default: asc
          schema:
            type: string
            enum: [asc, desc]
        - name: fields
          in: query
          description: The fields to include in the response.
          style: explode
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [name, alpha_2, alpha_3, numeric]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/country"
                example:
                  - name: "United Kingdom of Great Britain and Northern Ireland"
                    alpha_2: "GB"
                    alpha_3: "GBR"
                    numeric: "826"
                  - name: "United States of America"
                    alpha_2: "US"
                    alpha_3: "USA"
                    numeric: "840"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "An unexpected error occurred while processing the request."
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "The request query is invalid."
                errors:
                  - field: "start_after"
                    message: "The value must be a valid id."
  /v1/sectors:
    get:
      summary: Get list of sectors that are present in the OS Hub platform.
      description: >
        Returns an array of sectors with that is aggregated from the facilities dataset.
      tags:
        - sectors
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/sector"
                example:
                  - name: "Agriculture"
                  - name: "Apparel"
                  - name: "Information"
  /v1/product-types:
    get:
      summary: Get list of product types that are present in the OS Hub platform.
      description: >
        Returns an array of product types that are aggregated from the facilities dataset.
      tags:
        - product-types
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/product_type"
                example:
                  - name: "Accessories"
                  - name: "Belts"
                  - name: "Caps"
  /v1/facility-types:
    get:
      summary: Get list of facility types that are supported by the OS Hub platform.
      description: >
        Returns an array of facility types that are supported by the platform.
      tags:
        - facility-types
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/facility_type"
                example:
                  - name: "Final Product Assembly"
                    processing_types:
                      - name: "Cutting"
                      - name: "Sewing"
                      - name: "Finishing"
                  - name: "Office / HQ"
                    processing_types:
                      - name: "Administration"
                      - name: "Management"
                      - name: "Sales"
                  - name: "Printing, Product Dyeing and Laundering"
                    processing_types:
                      - name: "Printing"
                      - name: "Dyeing"
                      - name: "Laundering"
  /v1/facility-types/{name}/processing-types:
    parameters:
      - name: name
        in: path
        description: The name of the facility type.
        required: true
        example: "Final Product Assembly"
        schema:
          type: string
    get:
      summary: Get list of processing types for a facility type.
      description: >
        Returns an array of processing types for a facility type.
      tags:
        - facility-types
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/processing_type"
                example:
                  - name: "Cutting"
                  - name: "Sewing"
                  - name: "Finishing"
  /v1/facilities:
    get:
      summary: Get list of facilities exposed by the OS Hub platform.
      parameters:
        - $ref: "#/components/parameters/limit"
        - name: start_after
          in: query
          description: Cursor for the pagination, needs to be value from the field used in `sort_by` param.
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Filter using the name of the facility.
          required: false
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: name_local
          in: query
          description: Filter using the local name of the facility.
          required: false
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: description
          in: query
          description: Filter using the description of the facility.
          required: false
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: address
          in: query
          description: Filter using the address of the facility.
          required: false
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: sector
          in: query
          description: Filter using the sector of the facility.
          required: false
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 255
        - name: product_type
          in: query
          description: Filter using the product type of the facility.
          required: false
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 255
        - name: facility_type
          in: query
          description: Filter using the facility type of the facility.
          required: false
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 255
        - name: processing_type
          in: query
          description: Filter using the processing type of the facility.
          required: false
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 255
        - name: number_of_workers
          in: query
          description: Filter using the number of employees of the facility.
          required: false
          schema:
            type: object
            properties:
              min:
                type: integer
                minimum: 0
              max:
                type: integer
                minimum: 0
        - name: location
          in: query
          description: Filter using the location of the facility.
          required: false
          schema:
            type: object
            properties:
              lat:
                type: number
                minimum: -90
                maximum: 90
              lon:
                type: number
                minimum: -180
                maximum: 180
        - name: minimum_order_quantity
          in: query
          description: Filter using the minimum order quantity of the facility.
          required: false
          schema:
            type: object
            properties:
              min:
                type: integer
                minimum: 0
              max:
                type: integer
                minimum: 0
        - name: average_lead_time
          in: query
          description: Filter using the average lead time of the facility.
          required: false
          schema:
            type: object
            properties:
              min:
                type: integer
                minimum: 0
              max:
                type: integer
                minimum: 0
        - name: percent_female_workers
          in: query
          description: Filter using the percentage
          required: false
          schema:
            type: object
            properties:
              min:
                type: integer
                minimum: 0
                maximum: 100
              max:
                type: integer
                minimum: 0
                maximum: 100
        - name: affiliations
          in: query
          description: Filter using the affiliations of the facility.
          required: false
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 255
        - name: certifications_standards_regulations
          in: query
          description: Filter using the certifications, standards, and regulations of the facility.
          required: false
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 255
        - name: country
          in: query
          description: Filter using the alpha-2, alpha-3 or numeric country code of the facility.
          required: false
          schema:
            type: string
            minLength: 0
        - name: sort_by
          in: query
          description: The field to sort the results by.
          required: false
          default: name
          schema:
            type: string
            enum: [name, address]
        - name: order_by
          in: query
          description: The order to sort the results by.
          required: false
          default: asc
          schema:
            type: string
            enum: [asc, desc]
      description: >
        Returns an array of facilities with name and id and other properties, where id is the unique identifier of the facility.
      tags:
        - facilities
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/facility"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "The request query is invalid."
                errors:
                  - field: "number_of_workers"
                    message: "The value must be a valid object with `min` and `max` properties."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "An unexpected error occurred while processing the request."
    post:
      summary: Create a new facility.
      description: >
        Creates a new facility with the given details.
      tags:
        - facilities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/facility_base"
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  os_id:
                    type: string
                    example: "CN2021250D1DTN7"
                  status:
                    type: string
                    example: "pending"
                    enum: ["pending", "approved", "rejected"]
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "The request body is invalid."
                errors:
                  - field: "name"
                    message: "The value must be a non-empty string."
                  - field: "country"
                    message: "The value must be a valid country code or name."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "An unexpected error occurred while processing the request."
  /v1/facilities/{os_id}:
    parameters:
      - name: os_id
        in: path
        description: The unique identifier of the facility.
        required: true
        schema:
          type: string
    get:
      summary: Get details of a facility by its unique identifier.
      description: >
        Returns details of a facility with name and id and other properties, where id is the unique identifier of the facility.
      tags:
        - facilities
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/facility"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "The request query is invalid."
                errors:
                  - field: "os_id"
                    message: "The value must be a valid id."
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "The facility with the given id was not found."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "An unexpected error occurred while processing the request."
    put:
      summary: Update an existing facility.
      description: >
        Updates an existing facility with the given details.
      tags:
        - facilities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/facility_base"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/facility_base"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "The facility with the given id was not found."
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "The request body is invalid."
                errors:
                  - field: "name"
                    message: "The value must be a non-empty string."
                  - field: "country"
                    message: "The value must be a valid country code or name."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "An unexpected error occurred while processing the request."
    patch:
      summary: Partially update an existing facility.
      description: >
        Partially updates an existing facility with the given details.
      tags:
        - facilities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/facility_base"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/facility_base"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "The facility with the given id was not found."
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "The request body is invalid."
                errors:
                  - field: "name"
                    message: "The value must be a non-empty string."
                  - field: "country"
                    message: "The value must be a valid country code or name."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "An unexpected error occurred while processing the request."
    delete:
      summary: Delete an existing facility.
      description: >
        Deletes an existing facility with the given id.
      tags:
        - facilities
      responses:
        204:
          description: No Content
          content:
            application/json:
              schema:
                example: null
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "The facility with the given id was not found."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "An unexpected error occurred while processing the request."
  /v1/facilities/{os_id}/contributions:
    parameters:
      - name: os_id
        in: path
        description: The unique identifier of the facility.
        required: true
        schema:
          type: string
    get:
      summary: Get list of contributions history to a facility.
      description: >
        Returns an array of contributions to a facility with name and id and other properties, where id is the unique identifier of the contribution.
      tags:
        - facilities
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/facility_contribution"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "The facility with the given id was not found."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              example:
                message: "An unexpected error occurred while processing the request."
components:
  schemas:
    contributor:
      $ref: "schemas/contributor.json"
    country:
      $ref: "schemas/country.json"
    sector:
      $ref: "schemas/sector.json"
    product_type:
      $ref: "schemas/product_type.json"
    facility_type:
      $ref: "schemas/facility_type.json"
    processing_type:
      $ref: "schemas/processing_type.json"
    facility_base:
      $ref: "schemas/facility_base.json"
    facility_contribution:
      $ref: "schemas/facility_contribution.json"
    facility:
      $ref: "schemas/facility.json"
    error:
      $ref: "schemas/error.json"

  parameters:
    limit:
      name: size
      in: query
      description: The maximum number of entries to return.
      required: false
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 251
